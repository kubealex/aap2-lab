---
- name: Download AAP2 Package 
  hosts: localhost
  vars_prompt:
    - name: offline_token
      prompt: What is your Offline Token? (Check README)
      unsafe: yes
      private: yes      
  vars:
    checksum:
      aap2: 414b3e84f5cdc3a10ba64e09a7c770aace88466c054520df3a12f9a5c39d7623
        
  tasks:
    - name: Retrieve an access token
      ansible.builtin.uri:
        url: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
        body:
          grant_type: refresh_token
          client_id: rhsm-api
          refresh_token: "{{ offline_token }}"
        body_format: form-urlencoded
        method: POST
      register: response

    - name: Retrieve image download URL
      ansible.builtin.uri:
        url: https://api.access.redhat.com/management/v1/images/{{ checksum.aap2 }}/download
        follow_redirects: no
        headers:
          Content-Type: application/json
          Authorization: 'Bearer {{ response.json.access_token }}'
        status_code:
          - 307
          - 200
      register: imageurl

    - name: Set result as facts
      ansible.builtin.set_fact:
        installer_url: "{{ imageurl.json.body.href }}"
        installer_package: "{{ imageurl.json.body.filename }}"
    
    - name: Retrieve RHEL ISO
      ansible.builtin.get_url:
        url: "{{ installer_url }}"
        dest: "{{ playbook_dir }}/{{ installer_package }}"

- name: Configure RHSM on nodes and download installer
  hosts: controller,hub
  vars_prompt:
    - name: rhsm_user
      prompt: What is your RHSM Username (RHNID)?
      unsafe: yes
      private: no

    - name: rhsm_password
      prompt: What is your RHSM Password?
      unsafe: yes
      private: yes

    - name: rhsm_pool_id
      prompt: What is the pool-id for your subscription (check README)?
      unsafe: yes
      private: no

  tasks:
    - name: Register system with Red Hat Subscription Manager
      community.general.redhat_subscription:
        state: present
        username: "{{ rhsm_user }}"
        password: "{{ rhsm_password }}"
        pool_ids: "{{ rhsm_pool_id }}"
      become: true
      

    - name: Enable required RHSM repositories
      community.general.rhsm_repository:
        name: 
          - ansible-automation-platform-2.2-for-rhel-9-x86_64-rpms
        state: enabled
      become: true

    - name: Ensure all packages are updated
      yum:
        name: '*'
        state: latest
      become: true        
  tags: setup

- name: AAP Controller configuration playbook
  hosts: controller
  vars_prompt:

  tasks:
    - name: Create destination directory
      file:
        path: ~/aap2
        state: directory

    - name: Extract AAP2 setup content
      ansible.builtin.unarchive:
        src: "{{ hostvars['localhost']['installer_package'] }}"
        dest: ~/aap2

    - name: Retrieve AAP2 folder name
      find:
        paths: ~/aap2
        file_type: directory
      register: untar

    - name: Copy inventory for controller
      ansible.builtin.template:
        src: inventory-controller.j2
        dest: "{{ untar.files[0].path }}/inventory"

    - name: Install AAP2
      ansible.builtin.shell: 
        cmd: ./setup.sh
        chdir: "{{ untar.files[0].path }}"
      become: true        

    - name: Reboot server
      reboot: 
      become: true        

  tags: controller

- name: AAP Automation Hub configuration playbook
  hosts: hub
  become: true
  tasks:
    - name: Create destination directory
      file:
        path: ~/aap2
        state: directory

    - name: Extract AAP2 setup content
      ansible.builtin.unarchive:
        src: "{{ hostvars['localhost']['installer_package'] }}"
        dest: ~/aap2

    - name: Get aap2 folder name
      find:
        paths: ~/aap2
        file_type: directory
      register: untar

    - name: Print var
      debug:
        var: untar.files[0].path

    - name: Copy inventory for controller
      ansible.builtin.template:
        src: inventory-hub.j2
        dest: "{{ untar.files[0].path }}/inventory"

    - name: Install Automation Hub
      ansible.builtin.shell:
        cmd: ./setup.sh
        chdir: "{{ untar.files[0].path }}"
      become: true        

    - name: Reboot server
      reboot:
      become: true        
      
  tags: hub
