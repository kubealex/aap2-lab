---
- name: Download AAP2 Package 
  hosts: localhost
  vars_prompt:
    - name: offline_token
      prompt: What is your Offline Token? (Check README)
      unsafe: yes
      private: yes      
  vars:
    checksum:
      aap2: 414b3e84f5cdc3a10ba64e09a7c770aace88466c054520df3a12f9a5c39d7623
        
  tasks:
    - ansible.builtin.include_role:
        name: package-downloader
      vars:
        rh_product_checksum: "{{ checksum.aap2 }}"
        rh_api_offline_token: "{{ offline_token }}"
      when: offline_token is defined and offline_token != ""

- name: Configure RHSM on nodes and download installer
  hosts: controller,hub
  become: true
  vars_prompt:
    - name: rhsm_user
      prompt: What is your RHSM Username (RHNID)?
      unsafe: yes
      private: no

    - name: rhsm_password
      prompt: What is your RHSM Password?
      unsafe: yes
      private: yes

    - name: rhsm_pool_id
      prompt: What is the pool-id for your subscription (check README)?
      unsafe: yes
      private: no

  tasks:
    - name: Register system with Red Hat Subscription Manager
      community.general.redhat_subscription:
        state: present
        username: "{{ rhsm_user }}"
        password: "{{ rhsm_password }}"
        pool_ids: "{{ rhsm_pool_id }}"      

    - name: Enable required RHSM repositories
      community.general.rhsm_repository:
        name: 
          - ansible-automation-platform-2.2-for-rhel-9-x86_64-rpms
        state: enabled

    - name: Ensure all packages are updated
      yum:
        name: '*'
        state: latest

  tags: setup

- name: AAP Controller configuration playbook
  hosts: controller
  become: true
  vars_prompt:

  tasks:
    - name: Create destination directory
      file:
        path: ~/aap2
        state: directory

    - name: Extract AAP2 setup content
      ansible.builtin.unarchive:
        src: "{{ hostvars['localhost']['product_filename'] }}"
        dest: ~/aap2

    - name: Retrieve AAP2 folder name
      find:
        paths: ~/aap2
        file_type: directory
      register: untar

    - name: Copy inventory for controller
      ansible.builtin.template:
        src: inventory-controller.j2
        dest: "{{ untar.files[0].path }}/inventory"

    - name: Install AAP2
      ansible.builtin.shell: 
        cmd: ./setup.sh
        chdir: "{{ untar.files[0].path }}"

    - name: Reboot server
      reboot: 

  tags: controller

- name: AAP Automation Hub configuration playbook
  hosts: hub
  become: true
  tasks:
    - name: Create destination directory
      file:
        path: ~/aap2
        state: directory

    - name: Extract AAP2 setup content
      ansible.builtin.unarchive:
        src: "{{ hostvars['localhost']['product_filename'] }}"
        dest: ~/aap2

    - name: Get aap2 folder name
      find:
        paths: ~/aap2
        file_type: directory
      register: untar

    - name: Print var
      debug:
        var: untar.files[0].path

    - name: Copy inventory for controller
      ansible.builtin.template:
        src: inventory-hub.j2
        dest: "{{ untar.files[0].path }}/inventory"

    - name: Install Automation Hub
      ansible.builtin.shell:
        cmd: ./setup.sh
        chdir: "{{ untar.files[0].path }}"

    - name: Reboot server
      reboot:
      
  tags: hub
